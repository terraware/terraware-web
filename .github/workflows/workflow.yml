# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install dependencies
        run: yarn

      - name: linter
        run: yarn lint

      - name: download and start backend
        run: yarn server:reset
        env:
          KEYCLOAK_AUTH_SERVER_URL: http://dummy/
          KEYCLOAK_CREDENTIALS_SECRET: dummy
          KEYCLOAK_REALM: dummy
          KEYCLOAK_RESOURCE: dummy

      - name: E-2-E
        run: yarn e2e
        env:
          # Increase timeouts to account for slow GitHub runner hosts
          CYPRESS_DEFAULT_COMMAND_TIMEOUT: 10000
          CYPRESS_REQUEST_TIMEOUT: 15000
          REACT_APP_TERRAWARE_API: 'http://localhost:8080'
          REACT_APP_SNACKBAR_TIMEOUT: 1000
          REACT_APP_MAPBOX_TOKEN: ${{ secrets.REACT_APP_MAPBOX_TOKEN }}

      - name: build
        run: yarn build
        env:
          REACT_APP_TERRAWARE_API: ''
          REACT_APP_MAPBOX_TOKEN: ${{ secrets.REACT_APP_MAPBOX_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build/push
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: terraware/tree-location-app:latest
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Configure AWS Credentials
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.STAGING_AWS_REGION }}

      - name: Deploy to staging environment
        if: github.ref == 'refs/heads/main'
        env:
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
        run: bash ./.github/scripts/deploy-staging.sh
